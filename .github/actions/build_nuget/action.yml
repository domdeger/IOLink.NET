name: deploy
description: Build Nuget Packages
# Were we can define the inputs that our action will accept
inputs:
  projectPath: 
    required: true
    description: The path to the project to build
  outputDirectory:
    required: false
    description: The directory to output the package to
    default: "./bin/Release"
  publish_Release:
    description: Publish the Release version of the package
    required: true
    default: "false"

runs:
  using: "composite"
  steps:
  - name: Install GitVersion
    uses: gittools/actions/gitversion/setup@v0
    with:
      versionSpec: '5.x'
      preferLatestVersion: true
  - name: Determine Version
    id: gitversion
    uses: gittools/actions/gitversion/execute@v0
    with:
      useConfigFile: true

  - name: Build Nuget Package for ${{ inputs.projectPath }}
    shell: bash
    working-directory: ${{ inputs.projectPath }}
    run: |
      echo "Building NuGet package for ${{ inputs.projectPath }}"
      echo "Package version: ${{ steps.gitversion.outputs.nugetVersionV2 }}"
      echo "Output directory: ${{ inputs.outputDirectory }}"
      
      # Create output directory if it doesn't exist
      mkdir -p ${{ inputs.outputDirectory }}
      
      # Build the package
      dotnet pack \
        --include-source \
        --include-symbols \
        /p:ContinuousIntegrationBuild=true \
        /p:PackageVersion=${{ steps.gitversion.outputs.nugetVersionV2 }} \
        -c Release \
        -o ${{ inputs.outputDirectory }}
      
      # Verify package was created
      if [ ! "$(ls -A ${{ inputs.outputDirectory }})" ]; then
        echo "ERROR: No package was created in ${{ inputs.outputDirectory }}"
        exit 1
      fi
      
      echo "Successfully created package(s):"
      ls -la ${{ inputs.outputDirectory }}

    